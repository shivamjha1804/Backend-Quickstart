apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-backend-project-app
  labels:
    app: test-backend-project
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: test-backend-project
      component: api
  template:
    metadata:
      labels:
        app: test-backend-project
        component: api
    spec:
      containers:
      - name: test-backend-project-app
        image: test-backend-project:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: DB_HOST
          value: "test-backend-project-postgres-service"
        - name: REDIS_HOST
          value: "test-backend-project-redis-service"
        envFrom:
        - secretRef:
            name: test-backend-project-secrets
        - configMapRef:
            name: test-backend-project-config
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /usr/src/app/logs
        - name: uploads
          mountPath: /usr/src/app/uploads
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: test-backend-project-logs-pvc
      - name: uploads
        persistentVolumeClaim:
          claimName: test-backend-project-uploads-pvc
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: test-backend-project-service
  labels:
    app: test-backend-project
    component: api
spec:
  selector:
    app: test-backend-project
    component: api
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
  type: LoadBalancer

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-backend-project-config
data:
  API_VERSION: "v1"
  LOG_LEVEL: "info"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: test-backend-project-logs-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: test-backend-project-uploads-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi